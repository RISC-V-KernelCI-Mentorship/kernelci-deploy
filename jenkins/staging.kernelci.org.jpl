#!/usr/bin/env groovy

/*
  Copyright (C) 2019 Collabora Limited
  Author: Guillaume Tucker <guillaume.tucker@collabora.com>

  This module is free software; you can redistribute it and/or modify it under
  the terms of the GNU Lesser General Public License as published by the Free
  Software Foundation; either version 2.1 of the License, or (at your option)
  any later version.

  This library is distributed in the hope that it will be useful, but WITHOUT
  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
  details.

  You should have received a copy of the GNU Lesser General Public License
  along with this library; if not, write to the Free Software Foundation, Inc.,
  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
*/

/* ----------------------------------------------------------------------------
 * Jenkins parameters

KCI_DEPLOY_URL (https://github.com/kernelci/kernelci-deploy.git)
  URL of the kernelci-deploy repository
KCI_DEPLOY_BRANCH (master)
  Name of the branch to use in the kernelci-deploy repository
DOCKER_IMAGE
  Dockerhub image name
GITHUB_SSH_KEY_NAME
  Name of the SSH key to use with Github
*/

def updateGithub(kci_deploy, project) {
    dir(kci_deploy) {
        sh(script: "ls -l keys")
        sh(script: "echo UID: ${env.UID}")
        sh(script: "NO_COLORS=true ./pending.py ${project}")
        sh(script: "(cd checkout/kernelci-core; git remote -v)")
        sh(script: """\
ssh-agent sh -c 'ssh-add keys/id_rsa_staging.kernelci.org; cd checkout/kernelci-core
git push --quiet --force origin HEAD:staging.kernelci.org staging-20191106.0'
""")
    }
}

node("docker && monitor") {
    def kci_deploy = "${env.WORKSPACE}/kernelci-deploy"
    def docker_image = docker.image(params.DOCKER_IMAGE)

    docker_image.pull()

    docker_image.inside() {
        stage("Init") {
            timeout(time: 15, unit: 'MINUTES') {
                sh(script: "rm -rf ${kci_deploy}")
                dir(kci_deploy) {
                    git(url: params.KCI_DEPLOY_URL,
                        branch: KCI_DEPLOY_BRANCH,
                        poll: false)

                    dir("${kci_deploy}/keys") {
                        withCredentials([sshUserPrivateKey(
                            credentialsId: params.GITHUB_SSH_KEY_NAME,
                            keyFileVariable: "key")]) {
                            sh(script: "cp ${key} id_rsa_staging.kernelci.org")
                        }
                    }
                }
            }
        }

        stage("Update") {
            timeout(time: 15, unit: 'MINUTES') {
                parallel(
                    kci_core: {
                        updateGithub(kci_deploy, "kernelci-core")
                    },
                    /*
                    kci_backend: {
                        updateGithub(kci_deploy, "kernelci-backend")
                    },
                    kci_frontend: {
                        updateGithub(kci_deploy, "kernelci-frontend")
                    },
                    */
                )
            }
        }
    }
}
